<style>
    .vapi-btn {
        z-index: 9999; /* Установите высокий z-index */
        position: fixed; /* Зафиксируйте кнопку на экране */
    }
</style>
<script>
  
  const assistant = "<46be5bbf-e813-4c2f-bd79-33c8a362dfa1"; // Substitute with your assistant ID
  const apiKey = "9aed914d-c60d-430d-b04d-4fc24f83d4cc"; // Substitute with your Public key from Vapi Dashboard.
  const buttonConfig = {
    position: "bottom-right", // "bottom" | "top" | "left" | "right" | "top-right" | "top-left" | "bottom-left" | "bottom-right"
    offset: "40px", // decide how far the button should be from the edge
    width: "50px", // min-width of the button
    height: "50px", // height of the button
    idle: { // button state when the call is not active.
        color: `rgb(43, 97, 186)`, 
        type: "pill", // or "round"
        icon: `https://unpkg.com/lucide-static@0.321.0/icons/phone.svg`,
    },
    loading: { // button state when the call is connecting
        color: `rgb(43, 97, 186)`,
        type: "pill", // or "round"
        title: "Подключение...", // only required in case of Pill
        subtitle: "Пожалуйста подождите", // only required in case of pill
        icon: `https://unpkg.com/lucide-static@0.321.0/icons/loader-2.svg`,
    },
    active: { // button state when the call is in progress or active.
        color: `rgb(43, 97, 186)`,
        type: "pill", // or "round"
        title: "Звонок в процессе...", // only required in case of Pill
        subtitle: "Завершить звонок.", // only required in case of pill
        icon: `https://unpkg.com/lucide-static@0.321.0/icons/phone-off.svg`,
    },
  };


  (function (d, t) {
    var g = document.createElement(t),
      s = d.getElementsByTagName(t)[0];
    g.src =
      "https://cdn.jsdelivr.net/gh/VapiAI/html-script-tag@latest/dist/assets/index.js";
    g.defer = true;
    g.async = true;
    s.parentNode.insertBefore(g, s);

    g.onload = function () {
      vapiInstance = window.vapiSDK.run({
        apiKey: apiKey, // mandatory
        assistant: assistant, // mandatory
        config: buttonConfig, // optional
      });
      vapiInstance.on('speech-start', () => {
        console.log('Speech has started');
      });

      vapiInstance.on('speech-end', () => {
        console.log('Speech has ended');
      });

      vapiInstance.on('call-start', () => {
        console.log('Call has started');
      });

      vapiInstance.on('call-end', () => {
        console.log('Call has stopped');
      });

      vapiInstance.on('volume-level', (volume) => {
        console.log(`Assistant volume level: ${volume}`);
      });
      // Function calls and transcripts will be sent via messages
      vapiInstance.on('message', (message) => {
        console.log(message);
      });
      vapiInstance.on('error', (e) => {
        console.error(e)
      });


    };
  })(document, "script");

</script>
